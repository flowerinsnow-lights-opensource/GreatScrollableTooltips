plugins() {
	id('fabric-loom').version("${fabric_loom_version}")
	id('maven-publish')
}

version = project.mod_version
group = project.maven_group

base() {
	archivesName = project.archives_base_name
}

repositories() {
	mavenCentral()

	maven() {
		url = 'https://maven.terraformersmc.com/releases/'
	}

	maven() {
		url = 'https://repo.flowerinsnow.online/repository/maven-opensources/'
	}

	maven() {
		url = 'https://cursemaven.com/'
	}
}

dependencies() {
	// To change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modImplementation("com.terraformersmc:modmenu:${modmenu_version}")
	modImplementation("curse.maven:legendary-tooltips-fabric-542478:5591020") // Legendary Tooltips [Fabric] v1.4.11
	include(api("online.flowerinsnow.fnml4j:interface:${fnml4j_version}"))
	include(api("online.flowerinsnow.fnml4j:core:${fnml4j_version}"))
}

processResources() {
	LinkedHashMap<String, ?> props = [
			'version' : project.version
	]
	props.forEach(inputs::property)

	filesMatching('fabric.mod.json') {
		expand(props)
	}
}

tasks.withType(JavaCompile).configureEach() {
	it.options.release = 21
}

java() {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar() {
	from('LICENSE')
}

// configure the maven publication
publishing() {
	publications() {
		mavenJava(MavenPublication) {
			artifactId = project.archives_base_name
			from(components.java)
		}
	}

	repositories() {
		maven() {
			url = "${System.getenv('PUBLISH_REPO_URL')}"
			credentials() {
				username = "${System.getenv('PUBLISH_REPO_USERNAME')}"
				password = "${System.getenv('PUBLISH_REPO_PASSWORD')}"
			}
		}
	}
}